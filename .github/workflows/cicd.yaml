name: CICD

on:
  push:
    branches:
      -localnet
      - devnet
      - mainnet
  pull_request:

jobs:
  analyze:
    runs-on: ubuntu-latest
    if: (github.actor != 'dependabot[bot]')
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v2

      - name: Initialise CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: javascript

      # Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  scan:
    runs-on: ubuntu-latest
    if: (github.actor != 'dependabot[bot]')
    steps:
      - uses: actions/checkout@v2

      # Critical
      - name: Run Trivy for critical vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs" # Filesystem mode
          ignore-unfixed: true # Ignore vulnerabilities with no available fix
          format: "table" # Table output mode as next step will report in security tab
          severity: "CRITICAL" # Error only on critical vulnerabilities
          exit-code: "1" # Fail the job if a critical vulnerability with fix available is found

      # Scanning
      - name: Run Trivy for reporting all vulnerabilities
        uses: aquasecurity/trivy-action@master
        if: always()
        with:
          scan-type: "fs" # Filesystem mode
          ignore-unfixed: true # Ignore vulnerabilities with no available fix
          format: "template" # Template output mode
          template: "@/contrib/sarif.tpl" # SARIF template to be compatible with GitHub security tab
          output: "trivy-results.sarif" # Output file name
          severity: "CRITICAL,HIGH,MEDIUM" # Report on critical/high/medium vulnerabiliies
          exit-code: "0" # No failing as for reporting purposes

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v1
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Install
      - name: Use Node.js 14.17
        uses: actions/setup-node@v1
        with:
          node-version: 14.17
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Run yarn install
        run: yarn install
      - name: Run linter
        run: yarn run lint
      - name: Run prettier
        run: yarn run format
      - name: Run unit tests
        run: yarn run test
